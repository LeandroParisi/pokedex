{"version":3,"sources":["components/style_sheets/images/star3.gif","images/page404.webp","images/loading-page.gif","images/Pokedex.webp","components/Button.js","components/Header.js","components/Pokemon.js","components/Pokedex.js","components/PokemonDetails.js","components/FavoritePokemons.js","services/api.js","components/CreatePokemonForm.js","components/DeletePokemonForm.js","pages/About.js","pages/NotFound.js","pages/CrudPage.js","pages/Loading.js","App.js","index.js"],"names":["module","exports","Button","className","children","disabled","onClick","id","Header","to","React","Component","Pokemon","this","props","pokemon","name","type","averageWeight","image","isFavorite","console","log","value","measurementUnit","pathname","state","src","alt","favStar","Pokedex","pokemonIndex","filteredType","setState","numberOfPokemons","pokemons","filter","Set","reduce","types","undefined","favoritePokemons","find","idInArray","filteredPokemons","fetchFilteredPokemons","pokemonTypes","fetchPokemonTypes","isPokemonFavorite","filterPokemons","map","key","nextPokemon","length","PokemonDetails","handleFavoriteCheck","bind","pokemonId","location","alreadyFavorite","includes","check","target","checked","handleStateChange","summary","foundAt","checkIfPokemonIsFavorite","htmlFor","FavoritePokemons","pokemonList","forEach","favoriteId","push","filterFavoritePokemons","getPokemonNames","pokedexNumber","endpoint","fetch","then","response","json","object","pokemon_entries","treatPokemonList","a","rawPokemonList","pokemon_species","treatedPokemonList","orderedPokemonList","sort","CreatePokemonForm","handleSelectChange","fetchSelectedPokemon","handleAddButton","pokemonNames","inicialRequest","selectedPokemon","selectedPokemonName","pokemonObject","treatedType","charAt","toUpperCase","slice","treatedName","stats","ability","stat","base_stat","weight","sprites","versions","animated","front_default","moreInfo","fetchUrl","treatFetchedPokemon","treatedPokemon","newNameList","currentNameList","treatedCurrentNameList","toLowerCase","addPokemon","newPokemonNames","api","newPokemonsNameList","currentPokemonList","diffPokemonNameList","placeholder","onChange","DeletePokemonForm","handleDeleteButton","chosenPokemon","deletePokemon","newPokemonList","About","NotFound","notFoundImage","CrudPage","setEditMode","editMode","Loading","loadingImage","App","getFavPokemonsFromLocalStorage","injectPokemonIntoList","allowPageRendering","shouldRender","booleanCheck","currentState","favoritePokemonsState","indexToBeRemoved","indexOf","splice","dataToBeTreated","split","number","parseInt","storedFavoritePokemons","localStorage","getItem","treatedData","treatStoredData","fetchPokemonStatus","setItem","pokemonToDelete","pokemonToAdd","pokedexLogo","width","exact","path","render","newPokemons","component","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.aa0b2fac.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/star3.ffd4173c.gif\";","module.exports = __webpack_public_path__ + \"static/media/page404.b7b543c3.webp\";","module.exports = __webpack_public_path__ + \"static/media/loading-page.8e7d2c13.gif\";","module.exports = __webpack_public_path__ + \"static/media/Pokedex.72fb9000.webp\";","import React from \"react\";\nimport \"./style_sheets/button.css\";\n\nconst Button = ({ className, children, disabled, onClick, id }) => (\n  <button\n    onClick={onClick}\n    className={`button-text ${className}`}\n    disabled={disabled}\n    id={id}\n  >\n    {children}\n  </button>\n);\n\nexport default Button;","import React from 'react';\nimport './style_sheets/Header.css'\nimport { Link } from 'react-router-dom';\n\nclass Header extends React.Component {\n  render() {\n    return(\n      <header>\n        <nav>\n          <div className='navigation-item'><Link to='/'>Home</Link></div>\n          <div className='navigation-item'><Link to='/about'>About</Link></div>\n          <div className='navigation-item'><Link to='/favorite-pokemons'>Favorite Pokemons</Link></div>\n          <div className='navigation-item'><Link to='/edit-pokedex'>Edit your pokedex</Link></div>\n\n        </nav>\n      </header>\n    )\n  }\n}\n\nexport default Header;\n","import React from 'react';\nimport './style_sheets/pokemon.css';\nimport { Link } from 'react-router-dom';\nimport favStar from './style_sheets/images/star3.gif'\nimport'./style_sheets/TypeBackgroundColors.css';\n\nclass Pokemon extends React.Component {\n  render() {\n    const {name, type, averageWeight, image, id} = this.props.pokemon;\n    const { isFavorite } = this.props;\n\n    console.log(this.props.pokemon);\n\n    return (\n      <div className='pokemon' id={type}>\n        <div>\n          <p><b>{name}</b></p>\n          <p>{type}</p>\n          <p>\n            Average weight: {`${averageWeight.value} ${averageWeight.measurementUnit}`}\n          </p>\n          <Link to={{\n            pathname:`/pokemon/${id}`,\n            state: { ...this.props.pokemon }\n          }}>\n            DETAILS\n          </Link>\n        </div>\n        <div className=\"pokemon-gif-container\">\n          <img src={image} alt={`${name} sprite`} id='pokemon-gif' />\n        </div>\n        {isFavorite === true ? <img src={favStar} className='star' alt='favorite-star'/> : <span />}\n      </div>\n    );\n  }\n}\n\nexport default Pokemon;","import React from 'react';\nimport Pokemon from './Pokemon';\nimport Button from './Button';\nimport './style_sheets/pokedex.css';\nimport'./style_sheets/TypeBackgroundColors.css';\n\nclass Pokedex extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {pokemonIndex: 0, filteredType: 'all'};\n  }\n\n  filterPokemons(filteredType) {\n    this.setState({filteredType, pokemonIndex: 0});\n  }\n\n  nextPokemon(numberOfPokemons) {\n    this.setState(state => ({\n      pokemonIndex: (state.pokemonIndex + 1) % numberOfPokemons,\n    }));\n  }\n\n  fetchFilteredPokemons() {\n    const {pokemons} = this.props;\n    const {filteredType} = this.state;\n\n    return pokemons.filter(pokemon => {\n      if (filteredType === 'all') return true;\n      return pokemon.type === filteredType;\n    });\n  }\n\n  fetchPokemonTypes() {\n    const {pokemons} = this.props;\n\n    return [...new Set(pokemons.reduce((types, {type}) => [...types, type], []))];\n  }\n\n  // change the way it is checked\n  isPokemonFavorite( { id } ) {\n    const { favoritePokemons } = this.props;\n    \n    const checkFavorite = favoritePokemons.find(idInArray => idInArray === id);\n\n    const returned = checkFavorite !== undefined ? true : false;\n\n    return returned\n  }\n\n  render() {\n    const filteredPokemons = this.fetchFilteredPokemons();\n    const pokemonTypes = this.fetchPokemonTypes();\n    const pokemon = filteredPokemons[this.state.pokemonIndex];\n    const isFavorite = this.isPokemonFavorite(pokemon);\n    return (\n      <div className=\"pokedex\">\n        <Pokemon pokemon={pokemon} isFavorite={isFavorite} />\n        <div className=\"pokedex-buttons-panel\">\n          <Button\n            onClick={() => this.filterPokemons('all')}\n            className=\"filter-button\">\n            All\n          </Button>\n          {pokemonTypes.map(type => (\n            <Button\n              key={type}\n              onClick={() => this.filterPokemons(type)}\n              className=\"filter-button\"\n              id={type}>\n              {type}\n            </Button>\n          ))}\n        </div>\n        <Button\n          className=\"pokedex-button\"\n          onClick={() => this.nextPokemon(filteredPokemons.length)}\n          disabled={filteredPokemons.length <= 1}>\n          Next pokemon\n        </Button>\n      </div>\n    );\n  }\n}\n\nexport default Pokedex;","import React from 'react';\nimport './style_sheets/PokemonDetails.css';\n\nclass PokemonDetails extends React.Component {\n  constructor(props) {\n    super();\n\n    this.handleFavoriteCheck = this.handleFavoriteCheck.bind(this);\n\n    this.state = {\n      isFavorite: false,\n      pokemonId: props.location.state.id,\n    }\n  }\n\n  // Check if POKEMONS is favorite and CHECK BOX!\n  checkIfPokemonIsFavorite() {\n    const { favoritePokemons } = this.props;\n    const { id } = this.props.location.state;\n\n    const alreadyFavorite = favoritePokemons.includes(id);\n\n    console.log(`Is this pokemon already favorited? ${alreadyFavorite}`)\n\n    return alreadyFavorite\n  }\n\n  handleFavoriteCheck( {target} ) {\n    const check = target.checked;\n    const { pokemonId } = this.state;\n    const { handleStateChange } = this.props;\n    \n    if(check) {\n      this.setState (() => ({\n         isFavorite: true \n        }), () => {\n          handleStateChange(pokemonId, this.state.isFavorite);\n        }\n      );\n    } else {\n      this.setState (() => ({\n        isFavorite: false \n       }), () => {\n        handleStateChange(pokemonId, this.state.isFavorite);\n       }\n     );\n    }\n  }\n\n  render() {\n    const { name, type, averageWeight, summary, foundAt, image } = this.props.location.state;\n    const isPokemonFavorite = this.checkIfPokemonIsFavorite();\n\n    return (\n      <div className='details-container'>\n        <h2>Pokemon Details</h2>\n        <img src={image} alt={`${name} sprite`} id='details-pokemon-gif' />\n        <main className='pokemon' id={type}>\n          <div>\n            <h3>{name}</h3>\n            <p><b>Type:</b> {type}</p>\n            <p><b>Average Weight:</b> {averageWeight.value} {averageWeight.measurementUnit}</p>\n            <p><b>Sumary:</b> {summary}</p>\n            <div className='details-container'>\n              <p><b>Found at: </b>{foundAt.map(location => <p>{location.location} </p>)}</p>\n              <div>\n                {foundAt.map(location => <img src={location.map} alt={location.location}/>)}\n              </div>\n              <div className='fav-checkbox-container'>\n                <input id='fav-checkbox' type=\"checkbox\" onClick={this.handleFavoriteCheck} checked={isPokemonFavorite}/>\n                <label htmlFor=\"fav-checkbox\">'Joinha!'</label>\n              </div>\n            </div>\n          </div>\n        </main>\n      </div>\n\n    )\n  }\n}\n\nexport default PokemonDetails;\n","import React from 'react';\nimport Pokedex from './Pokedex';\n\nclass FavoritePokemons extends React.Component {\n\n  filterFavoritePokemons(favoritePokemons, pokemonList) {\n    const filteredPokemons = [];\n    \n    favoritePokemons.forEach(favoriteId => {\n     const find = pokemonList.find(pokemon => pokemon.id == favoriteId);\n     if (find !== undefined) {\n       filteredPokemons.push(find)\n     }\n   })\n\n    return filteredPokemons\n  }\n\n  render() {\n    const { favoritePokemons, pokemonList } = this.props;\n\n    const filteredPokemons = this.filterFavoritePokemons(favoritePokemons, pokemonList)\n\n    return(\n      <main>\n        <h2>Your Favorite Pokemons:</h2>\n        {filteredPokemons.length === 0 ? <h3>You don't have favorite Pokemons</h3> : <Pokedex pokemons={filteredPokemons} favoritePokemons={favoritePokemons} />}\n      </main>\n    )\n  }\n}\n\nexport default FavoritePokemons;\n","export function getPokemonNames (pokedexNumber) {\n  const endpoint = `https://pokeapi.co/api/v2/pokedex/${pokedexNumber}/`;\n\n  return fetch(endpoint)\n    .then((response) => response.json())\n    .then((object) => object.pokemon_entries)\n}\n\nexport async function treatPokemonList (pokedexNumber) {\n  const rawPokemonList = await getPokemonNames(pokedexNumber);\n  const treatedPokemonList = await rawPokemonList\n    .map(pokemon => pokemon.pokemon_species.name);\n  const orderedPokemonList = treatedPokemonList.sort()\n  return orderedPokemonList;\n}\n\n","import React from \"react\";\nimport './style_sheets/CreatePokemonForm.css';\nimport * as api from '../services/api';\nimport Pokemon from \"./Pokemon\";\nimport Button from './Button';\n\n\n\n\nclass CreatePokemonForm extends React.Component {\n  constructor() {\n    super();\n\n    this.handleSelectChange = this.handleSelectChange.bind(this);\n    this.fetchSelectedPokemon = this.fetchSelectedPokemon.bind(this);\n    this.handleAddButton = this.handleAddButton.bind(this);\n\n    this.state = {\n      pokemonNames: undefined,\n      inicialRequest: false,\n      selectedPokemon: undefined,\n      selectedPokemonName: undefined,\n    }\n\n  }\n\n  treatFetchedPokemon(pokemonObject) {\n    const type = pokemonObject.types[0].type.name;\n    const treatedType = type.charAt(0).toUpperCase() + type.slice(1);\n\n    const name = pokemonObject.name;\n    const treatedName = name.charAt(0).toUpperCase() + name.slice(1);\n\n    const stats = pokemonObject.stats.map(ability => {\n      return {\n        stat: ability.stat.name,\n        value: ability.base_stat,\n      }\n    })\n\n    const treatedPokemonObject = {\n      id: pokemonObject.id,\n      name: treatedName,\n      type: treatedType,\n      stats: stats,\n      averageWeight: {\n        value: pokemonObject.weight / 10,\n        measurementUnit: 'kg',\n      },\n      image: pokemonObject.sprites.versions[\"generation-v\"]['black-white'].animated.front_default,\n      moreInfo: \"??more info\",\n      foundAt: [\n        {\n          location: 'Alola Route 3',\n          map: 'https://cdn.bulbagarden.net/upload/9/93/Alola_Route_3_Map.png',\n        },\n        {\n          location: 'Kanto Route 3',\n          map: 'https://cdn.bulbagarden.net/upload/4/4a/Kanto_Route_3_Map.png',\n        },\n      ],\n      summary: \"??summary\"\n    }\n\n    return treatedPokemonObject;\n  }\n\n  fetchSelectedPokemon(pokemon) {\n    const endpoint = 'https://pokeapi.co/api/v2/pokemon/'\n  \n    const fetchUrl = `${endpoint}${pokemon}`;\n\n    fetch(fetchUrl)\n      .then(response => response.json())\n      .then(pokemonObject => this.treatFetchedPokemon(pokemonObject))\n      .then(treatedPokemon => this.setState({ selectedPokemon: treatedPokemon }))\n  }\n\n  handleSelectChange( {target} ) {\n    const selectedPokemonName = target.value;\n\n    this.setState ({\n      selectedPokemonName: selectedPokemonName,\n    }, () => {\n      const { selectedPokemonName } = this.state;\n      this.fetchSelectedPokemon(selectedPokemonName);\n    })\n  }\n\n  diffPokemonNameList(newNameList, currentNameList) {\n    const treatedCurrentNameList = currentNameList.map(pokemon => pokemon.name.toLowerCase());\n\n    const diffNameList = newNameList.filter(name => !treatedCurrentNameList.includes(name));\n\n    return diffNameList;\n  }\n\n  handleAddButton() {\n    const { addPokemon } = this.props;\n    const { selectedPokemon, pokemonNames, selectedPokemonName } = this.state;\n    addPokemon(selectedPokemon);\n\n    const newPokemonNames = pokemonNames.filter(name => name !== selectedPokemonName);\n\n    this.setState({ \n      pokemonNames: newPokemonNames,\n      selectedPokemon: undefined,\n      selectedPokemonName: undefined,\n    });\n  }\n\n  async componentDidMount() {\n    const newPokemonsNameList = await api.treatPokemonList(1);\n    const { currentPokemonList } = this.props;\n\n    const diffPokemonNameList = this.diffPokemonNameList(newPokemonsNameList, currentPokemonList)\n\n    this.setState({ pokemonNames: diffPokemonNameList, inicialRequest: true })\n\n  }\n\n  render() {\n    const { inicialRequest, pokemonNames, selectedPokemon } = this.state;\n    return(\n      <section className=\"select-pokemon-container\">\n        <form className=\"crud-form\">\n          {inicialRequest && (\n            <select name=\"pokemon-name\" placeholder=\"Choose your pokemon\" onChange={this.handleSelectChange}>\n              {pokemonNames.map(pokemon => <option key={pokemon.id} value={pokemon}> {pokemon} </option>)}\n            </select>\n          )}\n        </form>\n\n        {selectedPokemon !== undefined ? <Pokemon pokemon={selectedPokemon}/> : null}\n\n        {selectedPokemon !== undefined ? (\n          <Button\n          className=\"submit-button\"\n          onClick={this.handleAddButton}\n          >\n          ADD POKEMON\n        </Button>\n        ) : null}  \n      </section>\n    )\n  }\n}\n\nexport default CreatePokemonForm;","import React from \"react\";\nimport './style_sheets/CreatePokemonForm.css';\nimport Pokemon from \"./Pokemon\";\nimport Button from './Button';\n\n\n\nclass DeletePokemonForm extends React.Component {\n  constructor(props) {\n    super();\n\n    this.handleSelectChange = this.handleSelectChange.bind(this);\n    this.handleDeleteButton = this.handleDeleteButton.bind(this);\n\n    this.state = {\n      selectedPokemon: undefined,\n      pokemonList: props.pokemonList,\n    }\n\n  }\n\n  handleSelectChange( {target} ) {\n    const { pokemonList } = this.props;\n\n    const chosenPokemon = pokemonList.find(pokemon => pokemon.name === target.value);\n    console.log(chosenPokemon);\n\n    this.setState({ selectedPokemon: chosenPokemon });\n  }\n\n  handleDeleteButton () {\n    const { deletePokemon } = this.props;\n    const { selectedPokemon, pokemonList } = this.state;\n    deletePokemon(selectedPokemon);\n\n    const newPokemonList = pokemonList.filter(pokemon => pokemon.id !== selectedPokemon.id);\n    \n    this.setState({ \n      pokemonList: newPokemonList,\n      selectedPokemon: undefined,\n    });\n  }\n\n  render() {\n    const { selectedPokemon, pokemonList } = this.state;\n    return(\n      <section className=\"select-pokemon-container\">\n        <form className=\"crud-form\">\n          <label htmlFor=\"pokemon-name\">Which pokemon you want to delete?</label>\n          <select name=\"pokemon-name\" id=\"pokemon-name\" placeholder=\"Choose your pokemon\" onChange={this.handleSelectChange}>\n            {pokemonList.map(pokemon => <option key={pokemon.id} value={pokemon.name}> {pokemon.name} </option>)}\n          </select>\n        </form>\n\n        {selectedPokemon !== undefined ? <Pokemon pokemon={selectedPokemon}/> : null}      \n\n        {selectedPokemon !== undefined ? (\n            <Button\n            className=\"submit-button\"\n            onClick={this.handleDeleteButton}\n            >\n            DELETE POKEMON\n          </Button>\n          ) : null}\n\n      </section>\n    )\n  }\n}\n\nexport default DeletePokemonForm;","import React from 'react';\nimport './style_sheets/About.css'\n\nclass About extends React.Component {\n  render() {\n    return(\n      <main className='about-main-section'>\n        <p className='about-text'>The Pokédex (Japanese: ポケモン図鑑 illustrated Pokémon encyclopedia) is a digital encyclopedia created by Professor Oak as an invaluable tool to Trainers in the Pokémon world. It gives information about all Pokémon in the world that are contained in its database, although it differs in how it acquires and presents information over the different media. However, they are also only given to a few Trainers at a time, generally to the ones that are felt to have exceptional potential and skill. Regional Pokédexes give information about Pokémon native to its particular region, while the National Pokédex records information about all known Pokémon.\n\n        Pokédex entries typically describe a Pokémon in only two or three sentences. They may give background information on the habitat or activities of a Pokémon in the wild or other information on the Pokémon's history or anatomy. Pokédex entries also include height, weight, cry, footprint (prior to Generation VI), location, other forms, and a picture of the Pokémon.\n\n        Sometimes the Pokédex might contain inaccurate or mythical information. For example, some of Tentacruel's entries describes it as having 80 tentacles when only 14 are visible.</p>\n      </main>\n    )\n  }\n}\n\nexport default About;\n","import React from 'react';\nimport notFoundImage from '../images/page404.webp'\n\nclass NotFound extends React.Component {\n  render() {\n    return (\n      <div>\n        <img src={notFoundImage} alt=\"Page 404 disclaimer\" />\n      </div>\n    )\n  }\n}\n\nexport default NotFound;\n","import React from 'react';\nimport {\n  CreatePokemonForm, DeletePokemonForm\n} from '../components'\nimport './style_sheets/CrudPage.css'\n\nclass CrudPage extends React.Component {\n  constructor() {\n    super();\n\n    this.setEditMode = this.setEditMode.bind(this);\n\n    this.state = {\n      editMode: '',\n    }\n  }\n\n  setEditMode({target}) {\n    const editMode = target.id;\n\n    this.setState ({editMode: editMode})\n  }\n\n  render() {\n\n    const { pokemonList, deletePokemon, addPokemon } = this.props;\n    const { editMode } = this.state;\n    return(\n      <main>\n        <h1>What do you want to do?</h1>\n        <div className=\"create-delete-opt-menu\">\n        <input type=\"radio\" id=\"create-pokemon\" name=\"opt-menu-radio\" onClick={this.setEditMode}/>\n        <label htmlFor=\"create-pokemon\">Regiter a Pokemon</label>\n\n        <input type=\"radio\" id=\"delete-pokemon\" name=\"opt-menu-radio\" onClick={this.setEditMode}/>\n        <label htmlFor=\"delete-pokemon\">Remove a Pokemon</label>\n        </div>\n\n        {editMode === \"create-pokemon\" ? <CreatePokemonForm currentPokemonList={ pokemonList} addPokemon={addPokemon} /> : null }\n\n        {editMode === \"delete-pokemon\" ? <DeletePokemonForm pokemonList={ pokemonList } deletePokemon={deletePokemon}/> : null }\n\n      </main>\n    )\n  }\n}\n\nexport default CrudPage;\n","import React from 'react';\nimport loadingImage from '../images/loading-page.gif'\nimport './style_sheets/Loading.css'\n\nclass Loading extends React.Component {\n  render() {\n    return (\n      <img className=\"loading-image\" src={loadingImage} alt=\"Loading page\" />\n    )\n  }\n}\n\nexport default Loading;","import React from 'react';\nimport './App.css';\nimport { BrowserRouter, Route, Switch } from 'react-router-dom'\nimport {\n  Pokedex, PokemonDetails, Header, FavoritePokemons\n} from './components'\nimport {\n  NotFound, About, CrudPage, Loading\n} from './pages'\nimport pokedexLogo from './images/Pokedex.webp'\nimport * as api from './services/api';\n\nclass App extends React.Component {\n  constructor() {\n    super();\n\n    this.handleStateChange = this.handleStateChange.bind(this);\n    this.getFavPokemonsFromLocalStorage = this.getFavPokemonsFromLocalStorage.bind(this);\n    this.injectPokemonIntoList = this.injectPokemonIntoList.bind(this);\n    this.allowPageRendering = this.allowPageRendering.bind(this);\n    this.deletePokemon = this.deletePokemon.bind(this);\n    this.addPokemon = this.addPokemon.bind(this);\n\n\n    this.state = {\n      favoritePokemons: [],\n      pokemonList: [],\n      shouldRender: false,\n    }\n  }\n\n  handleStateChange(pokemonId, booleanCheck) {\n    if(booleanCheck) {\n      this.setState((currentState) => (\n        { \n          favoritePokemons: [\n            ...currentState.favoritePokemons,\n            pokemonId\n          ]\n        })\n      )\n    } else {\n      const favoritePokemonsState = this.state.favoritePokemons;\n      const indexToBeRemoved = favoritePokemonsState.indexOf(pokemonId);\n      favoritePokemonsState.splice(indexToBeRemoved, 1);\n\n      this.setState({ favoritePokemons: favoritePokemonsState })\n    }\n  }\n\n  treatStoredData(dataToBeTreated) {\n    const stringArray = dataToBeTreated.split(',')\n    const numberArray = stringArray.map(number => parseInt(number, 10));\n    return numberArray\n  }\n\n  getFavPokemonsFromLocalStorage () {\n    const storedFavoritePokemons = localStorage.getItem('favoritePokemons');\n    \n    if ( storedFavoritePokemons ) {\n      const treatedData = this.treatStoredData(storedFavoritePokemons);\n      this.setState({ favoritePokemons: treatedData })\n    }\n  }\n\n  injectPokemonIntoList(pokemon) {\n    const type = pokemon.types[0].type.name;\n    const treatedType = type.charAt(0).toUpperCase() + type.slice(1);\n\n    const name = pokemon.name;\n    const treatedName = name.charAt(0).toUpperCase() + name.slice(1);\n\n    const stats = pokemon.stats.map(ability => {\n      return {\n        stat: ability.stat.name,\n        value: ability.base_stat,\n      }\n    })\n\n    const pokemonObject = {\n      id: pokemon.id,\n      name: treatedName,\n      type: treatedType,\n      stats: stats,\n      averageWeight: {\n        value: pokemon.weight / 10,\n        measurementUnit: 'kg',\n      },\n      image: pokemon.sprites.versions[\"generation-v\"]['black-white'].animated.front_default,\n      moreInfo: \"??more info\",\n      foundAt: [\n        {\n          location: 'Alola Route 3',\n          map: 'https://cdn.bulbagarden.net/upload/9/93/Alola_Route_3_Map.png',\n        },\n        {\n          location: 'Kanto Route 3',\n          map: 'https://cdn.bulbagarden.net/upload/4/4a/Kanto_Route_3_Map.png',\n        },\n      ],\n      summary: \"??summary\"\n    }   \n\n    this.setState ((currentState) => ({\n      pokemonList: [\n        ...currentState.pokemonList,\n        pokemonObject,\n      ]\n    }), () => {\n      this.allowPageRendering()\n    })\n  }\n\n  fetchPokemonStatus (pokemonNames) {\n      const endpoint = 'https://pokeapi.co/api/v2/pokemon/'\n    \n      pokemonNames.forEach(pokemon => {\n        const fetchUrl = `${endpoint}${pokemon}`;\n\n        fetch(fetchUrl)\n          .then(response => response.json())\n          .then(pokemonObject => this.injectPokemonIntoList(pokemonObject))\n      })\n    }\n\n  async componentDidMount() {\n    await this.getFavPokemonsFromLocalStorage();\n\n    const pokemonNames = await api.treatPokemonList(2);\n    \n    await this.setState ({pokemonNames: pokemonNames});\n\n    this.fetchPokemonStatus(pokemonNames);\n  }\n\n  allowPageRendering() {\n    const { pokemonList, pokemonNames } = this.state;\n    \n    if(pokemonList.length === pokemonNames.length) {\n      this.setState({ shouldRender: true})\n    } else {}\n  }\n\n  componentDidUpdate() {\n    const { favoritePokemons } = this.state;\n    localStorage.setItem('favoritePokemons', favoritePokemons)\n  }\n\n  deletePokemon(pokemonToDelete) {\n    console.log(`'Delete' ${pokemonToDelete}`);\n    const { pokemonList } = this.state;\n\n    const newPokemonList = pokemonList.filter(pokemon => pokemon.id !== pokemonToDelete.id);\n    \n    this.setState({ pokemonList: newPokemonList});\n  }\n\n  addPokemon(pokemonToAdd) {\n    console.log('addPokemon')\n    const { pokemonList } = this.state;\n\n    pokemonList.push(pokemonToAdd);\n    \n    this.setState({ pokemonList: pokemonList});\n  }\n\n\n\n  render() {\n\n    const { favoritePokemons, pokemonList, shouldRender } = this.state;\n\n    return (\n      <div>\n        {shouldRender === false ? <Loading /> : (\n          <BrowserRouter>\n            <div className=\"App\">\n              <img src={pokedexLogo} alt=\"Pokedex Logo\" width=\"200px\"/>\n              <Header />\n              <Switch>\n                <Route exact path=\"/\" render={(props) => <Pokedex {...props} pokemons={pokemonList} newPokemons={pokemonList} favoritePokemons={favoritePokemons} />} />\n\n                <Route exact path=\"/pokemon/:id\" render={(props) => <PokemonDetails {...props} handleStateChange={this.handleStateChange} favoritePokemons={favoritePokemons} />}/>\n\n                <Route exact path=\"/about\" component={About} />\n\n                <Route exact path=\"/edit-pokedex\" render={(props) => <CrudPage {...props} pokemonList={pokemonList} deletePokemon={this.deletePokemon} addPokemon={this.addPokemon} />}/>\n\n                <Route exact path='/favorite-pokemons' render={(props) => <FavoritePokemons {...props} pokemonList={pokemonList} favoritePokemons={favoritePokemons} />}/>\n\n                <Route path=\"*\" component={NotFound} />\n              </Switch>\n            </div>\n          </BrowserRouter>\n        )}\n      </div>\n    );\n  }\n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}